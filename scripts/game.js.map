{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "class MovingObject {\r\n  constructor(position, speed = {vx: 0, vy: 0}, accelerationDelta = 0) {\r\n    this.position = position;\r\n    this.speed = speed;\r\n    this.accelerationDelta = accelerationDelta;\r\n  }\r\n\r\n  update() {\r\n    this.position = {\r\n      x: this.position.x + this.speed.vx,\r\n      y: this.position.y + this.speed.vy\r\n    }\r\n  }\r\n}\r\n\r\nclass Asteroid extends MovingObject {\r\n  constructor(position, speed, accelerationDelta, size) {\r\n    super(position, speed, accelerationDelta);\r\n    this.size = size;\r\n  }\r\n\r\n  draw(ctx) {\r\n    let {x, y} = this.position;\r\n    this.checkOutOfBoundaries();\r\n    ctx.moveTo(x - 30 * this.size, y - 20 * this.size);\r\n    ctx.lineTo(x - 10 * this.size, y - 25 * this.size);\r\n    ctx.lineTo(x - 15 * this.size, y - 17 * this.size);\r\n    ctx.lineTo(x - 10 * this.size, y - 10 * this.size);\r\n    ctx.lineTo(x, y - 5 * this.size);\r\n    ctx.lineTo(x + 5 * this.size, y);\r\n    ctx.lineTo(x, y + 13 * this.size);\r\n    ctx.lineTo(x - 5 * this.size, y + 15 * this.size);\r\n    ctx.lineTo(x - 20 * this.size, y + 13 * this.size);\r\n    ctx.lineTo(x - 35 * this.size, y - 5 * this.size);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n\r\n  }\r\n}\r\n\r\nclass Bullet extends MovingObject {\r\n  constructor(position, speed, accelerationDelta) {\r\n    super(position, speed, accelerationDelta);\r\n  }\r\n\r\n  draw(ctx) {\r\n    let {x, y} = this.position;\r\n    this.checkOutOfBoundaries();\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 3, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nclass Player extends MovingObject {\r\n\r\n  constructor(position, speed, accelerationDelta) {\r\n    super(position, speed, accelerationDelta);\r\n    this.maxSpeed = 5;\r\n    this.shoot = () => {\r\n    };\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    window.addEventListener(\"keypress\", (event) => {\r\n      switch (event.code) {\r\n        case 'KeyW':\r\n          if (this.speed.vy < 0) this.speed.vy -= this.accelerationDelta;\r\n          else this.speed.vy = -0.5 - this.accelerationDelta;\r\n          break;\r\n        case 'KeyS':\r\n          if (this.speed.vy > 0) this.speed.vy += this.accelerationDelta;\r\n          else this.speed.vy = 0.5 + this.accelerationDelta;\r\n\r\n          break;\r\n        case 'KeyA':\r\n          if (this.speed.vx < 0) this.speed.vx -= this.accelerationDelta;\r\n          else this.speed.vx = -0.5 - this.accelerationDelta;\r\n\r\n          break;\r\n        case 'KeyD':\r\n          if (this.speed.vx > 0) this.speed.vx += this.accelerationDelta;\r\n          else this.speed.vx = 0.5 + this.accelerationDelta;\r\n          break;\r\n        case 'Space':\r\n          this.shoot();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (Math.abs(this.speed.vx) > this.maxSpeed) this.speed.vx = Math.sign(this.speed.vx) * this.maxSpeed;\r\n      if (Math.abs(this.speed.vy) > this.maxSpeed) this.speed.vy = Math.sign(this.speed.vy) * this.maxSpeed;\r\n    });\r\n\r\n  }\r\n\r\n  draw(ctx) {\r\n    let {x, y} = this.position;\r\n    this.checkOutOfBoundaries();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - 10, y - 10);\r\n    ctx.lineTo(x + 20, y);\r\n    ctx.lineTo(x - 10, y + 10);\r\n    ctx.lineTo(x, y);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default class Game {\r\n  constructor() {\r\n    this.container = document.getElementById('content');\r\n    this.canvas = document.getElementById('canvas');\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.prevUpdateTime = 0;\r\n    this.height = 0;\r\n    this.width = 0;\r\n    this.center = {x: 0, y: 0};\r\n    this.mouse = {x: 0, y: 0};\r\n    this.score = 0;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    window.addEventListener(\"resize\", x => this.onResize());\r\n    this.onResize();\r\n    this.player = new Player(this.center, {vx: 0, vy: 0}, 0.7);\r\n    this.player.checkOutOfBoundaries = this.outOfBoundariesWrap(this.player);\r\n    let asteroids = this.initAsteroids();\r\n    this.objects = [this.player, ...asteroids];\r\n    this.canvas.addEventListener('mousemove', (event) => {\r\n      this.mouse = {x: event.offsetX, y: event.offsetY};\r\n    });\r\n    this.player.shoot = () => {\r\n      this.shoot()\r\n    };\r\n    requestAnimationFrame((time) => this.update(time));\r\n  }\r\n\r\n  onResize() {\r\n    this.width = this.container.clientWidth;\r\n    this.height = this.container.clientHeight;\r\n\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n    this.center = {x: Math.floor(this.width / 2), y: Math.floor(this.height / 2)};\r\n  }\r\n\r\n  initAsteroids() {\r\n    let arr = [];\r\n    let maxTries = 20;\r\n    while (arr.length < 7 && maxTries !== 0) {\r\n      arr.push(this.spawnAsteroid());\r\n      maxTries--;\r\n    }\r\n\r\n    return arr\r\n  }\r\n\r\n  spawnAsteroid() {\r\n    let side = Math.floor(Math.random() * 2);\r\n    const boundariesArray = [[0, 0.2 * this.width, 0, this.height], [0.8 * this.width, this.width, 0, this.height]];\r\n    let boundaries = boundariesArray[side];\r\n    let x = Math.random() * (boundaries[1] - boundaries[0]) + boundaries[0];\r\n    let y = Math.random() * (boundaries[2] - boundaries[3]) + boundaries[2];\r\n    let vx = (Math.random() * 5) - 2.5;\r\n    let vy = (Math.random() * 5) - 2.5;\r\n    let asteroidSizes = [1, 1.5, 2];\r\n    let size = asteroidSizes[Math.floor(Math.random() * 3)];\r\n    let asteroid = new Asteroid({x: x, y: y}, {vx: vx, vy: vy}, null, size);\r\n    asteroid.checkOutOfBoundaries = this.outOfBoundariesWrap(asteroid);\r\n    return asteroid;\r\n  }\r\n\r\n  shoot() {\r\n    const bulletSpeed = 5;\r\n    const vector = {vx: this.mouse.x - this.player.position.x, vy: this.mouse.y - this.player.position.y};\r\n    const vectorLength = Math.sqrt(vector.vx ** 2 + vector.vy ** 2);\r\n    const vectorNormalized = {vx: bulletSpeed * (vector.vx / vectorLength), vy: bulletSpeed * (vector.vy / vectorLength)};\r\n    let bullet = new Bullet(this.player.position, vectorNormalized);\r\n    this.objects.push(bullet);\r\n    bullet.checkOutOfBoundaries = this.outOfBoundariesDestroy(bullet, this.objects.length - 1);\r\n\r\n  };\r\n\r\n  outOfBoundariesWrap(object) {\r\n    return () => {\r\n      if (object.position.x > this.width) object.position.x = 0;\r\n      if (object.position.y > this.height) object.position.y = 0;\r\n      if (object.position.x < 0) object.position.x = this.width;\r\n      if (object.position.y < 0) object.position.y = this.height;\r\n    }\r\n  }\r\n\r\n  outOfBoundariesDestroy(object) {\r\n    return () => {\r\n      if (object.position.x > this.width || object.position.y > this.height || object.position.x < 0 || object.position.y < 0) {\r\n        const index = this.objects.indexOf(object);\r\n        this.objects.splice(index, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  update(time) {\r\n    const dt = time - this.prevUpdateTime;\r\n    this.prevUpdateTime = time;\r\n    this.ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    this.objects.forEach((obj) => {\r\n      obj.update();\r\n      obj.draw(this.ctx);\r\n    });\r\n    requestAnimationFrame((time) => this.update(time));\r\n  }\r\n}\r\n\r\nnew Game();"
  ]
}